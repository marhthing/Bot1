const { spawn, spawnSync } = require('child_process')
const { existsSync } = require('fs')

console.log('🎯 Auto-Clone Discord Bot Manager')
console.log('📍 Working in:', __dirname)

// Your GitHub repository
const GITHUB_REPO = 'https://github.com/marhthing/aaa.git'

// Clone your bot repository
console.log('📥 Cloning bot from GitHub...')
console.log('🔗 Repository:', GITHUB_REPO)

// Remove any existing files (except this manager)
console.log('🧹 Cleaning workspace...')
spawnSync('bash', ['-c', 'find . -maxdepth 1 ! -name "." ! -name "index.js" -exec rm -rf {} +'], { stdio: 'inherit' })

// Clone repository
const cloneResult = spawnSync('git', ['clone', GITHUB_REPO, '.'], {
    stdio: 'inherit'
})

if (cloneResult.error || cloneResult.status !== 0) {
    console.error('❌ Failed to clone repository!')
    console.error('Error:', cloneResult.error?.message || `Exit code: ${cloneResult.status}`)
    process.exit(1)
}

if (moveResult.error || moveResult.status !== 0) {
    console.error('❌ Failed to move bot files!')
    console.error('Error:', moveResult.error?.message || `Exit code: ${moveResult.status}`)
    process.exit(1)
}

console.log('✅ Bot files moved successfully!')

// Check what we have now
console.log('📁 Directory after clone:')
spawnSync('ls', ['-la'], { stdio: 'inherit' })

// Find entry point
const possibleEntryPoints = ['bot.js', 'app.js', 'main.js', 'src/index.js']
let entryPoint = null

for (const file of possibleEntryPoints) {
    if (existsSync(file)) {
        entryPoint = file
        break
    }
}

// Check package.json for main field
if (!entryPoint && existsSync('package.json')) {
    try {
        const packageJson = JSON.parse(require('fs').readFileSync('package.json', 'utf8'))
        if (packageJson.main && existsSync(packageJson.main)) {
            entryPoint = packageJson.main
        }
    } catch (err) {
        console.log('⚠️ Could not read package.json main field')
    }
}

if (!entryPoint) {
    console.error('❌ No bot entry point found!')
    console.log('📁 Available JS files:')
    spawnSync('find', ['.', '-name', '*.js', '-type', 'f'], { stdio: 'inherit' })
    process.exit(1)
}

console.log(`✅ Found bot entry point: ${entryPoint}`)

// Install dependencies
if (existsSync('package.json')) {
    console.log('📦 Installing dependencies...')
    const installResult = spawnSync('npm', ['install', '--production'], {
        stdio: 'inherit'
    })

    if (installResult.error || installResult.status !== 0) {
        console.error('❌ Failed to install dependencies')
        process.exit(1)
    }
    console.log('✅ Dependencies installed!')
}

// Start the actual bot
console.log(`🚀 Starting bot: ${entryPoint}`)

const botProcess = spawn('node', [entryPoint], {
    stdio: 'inherit'
})

let restartCount = 0
const maxRestarts = 5

botProcess.on('exit', (code, signal) => {
    console.log(`🔄 Bot exited with code ${code}, signal ${signal}`)
    
    if (code !== 0 && signal !== 'SIGTERM' && signal !== 'SIGINT') {
        restartCount++
        if (restartCount <= maxRestarts) {
            console.log(`🔄 Restarting bot... (${restartCount}/${maxRestarts})`)
            setTimeout(() => {
                spawn('node', [entryPoint], { stdio: 'inherit' })
            }, 2000)
        } else {
            console.error('❌ Too many restarts, stopping')
        }
    }
})

botProcess.on('error', (error) => {
    console.error('❌ Bot start error:', error.message)
})

console.log('✅ Bot manager running!')